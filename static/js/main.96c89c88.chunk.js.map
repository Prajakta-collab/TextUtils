{"version":3,"sources":["componets/About.js","componets/Navbar.js","componets/TextForm.js","componets/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","useState","backgroundColor","color","border","mystyle","className","style","id","type","href","Navbar","props","mode","title","onClick","toggleMode","for","TextForm","text","setText","user","setUser","value","rows","width","onChange","event","target","newText","toUpperCase","showAlert","toLocaleLowerCase","split","length","Alert","alert","msg","defaultProps","about","App","setMode","setAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.96c89c88.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport default function About() {\r\n  const [mystyle, setMyStyle] = useState({\r\n    backgroundColor: \"white\",\r\n    color: \"black\",\r\n    border: \"1px solid white\",\r\n  });\r\n\r\n  const [btntext, setBtnText] = useState(\"Enable dark mode\");\r\n\r\n  let onEnable = () => {\r\n    if (mystyle.backgroundColor === \"white\") {\r\n      setMyStyle({\r\n        backgroundColor: \"black\",\r\n        color: \"white\",\r\n        border: \"1px solid white\",\r\n      });\r\n\r\n      setBtnText(\"Enable Light mode\");\r\n    } else {\r\n      setMyStyle({\r\n        backgroundColor: \"white\",\r\n        color: \"black\",\r\n      });\r\n      setBtnText(\"Enable dark mode\");\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"container\" style={mystyle}>\r\n      <div className=\"accordion\" id=\"accordionExample\" style={mystyle}>\r\n        <div className=\"accordion-item\" style={mystyle}>\r\n          <h2 className=\"accordion-header\" id=\"headingOne\">\r\n            <button\r\n              className=\"accordion-button\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseOne\"\r\n              aria-expanded=\"true\"\r\n              aria-controls=\"collapseOne\"\r\n              style={mystyle}\r\n            >\r\n              About Us \r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseOne\"\r\n            className=\"accordion-collapse collapse show\"\r\n            aria-labelledby=\"headingOne\"\r\n            data-bs-parent=\"#accordionExample\"\r\n            style={mystyle}\r\n          >\r\n            <div className=\"accordion-body\">\r\n              <strong>This website is developed by Prajakta Badgujar.</strong> It is\r\n             a simple text utility which will help you in manipulating your text.<br/>\r\n             <strong>Want to stay connected ? <br/>Follow me here ! - <a href=\"https://github.com/Prajakta-collab\">Prajakta-collab</a></strong>\r\n            </div>\r\n          </div>\r\n        </div>\r\n       \r\n         \r\n      </div>\r\n    \r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { BrowserRouter as Router, Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n \r\n      <div className=\"container-fluid my-2 \">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse \" id=\"navbarSupportedContent\" >\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              \r\n              {/* <Link className=\"nav-link\" to=\"/about\">\r\n                About\r\n              </Link> */}\r\n            </li>\r\n          </ul>\r\n          <div className={`form-check form-switch text-${props.mode==='dark'?'light':'dark'}`}>\r\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n  <label className=\"form-check-label\" for=\"flexSwitchCheckChecked\">Dark mode</label>\r\n</div>\r\n          \r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  about: PropTypes.string.isRequired,\r\n};\r\nNavbar.defaultProps = {\r\n  title: \"title here\",\r\n  about: \"about here\"\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const [text, setText] = useState(\"\");\r\n  const [user, setUser] = useState(\"User\");\r\n\r\n  // const userchange = () => {\r\n  //   setUser(user);\r\n  // };\r\n  const userchange = (event) => {\r\n    setUser(event.target.value);\r\n  };\r\n\r\n  let handleUpClick = () => {\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Changed to upper case !\", \"success\");\r\n  };\r\n  let handleLowClick = () => {\r\n    let newText = text.toLocaleLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Changed to lower case !\", \"success\");\r\n  };\r\n  let handleClearClick = () => {\r\n    setText(\" \");\r\n    props.showAlert(\"Text Cleared!\", \"success\");\r\n  };\r\n\r\n  let handleONChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container\"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}\r\n      >\r\n        <label for=\"mybox\" className=\"form-label\" my-1>\r\n          {\" \"}\r\n        </label>\r\n      \r\n        <textarea\r\n          className=\"form-control my-3\"\r\n          id=\"username\"\r\n          value={user}\r\n          rows=\"1\"\r\n          width=\"40vw\"\r\n          onChange={userchange}\r\n          style={{\r\n            backgroundColor: props.mode === \"dark\" ? \"#495057\" : \"white\",\r\n            color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n          }}\r\n        ></textarea>\r\n\r\n        {/* <button className=\"btn btn-primary mx-2\" onClick={userchange}>\r\n          Go\r\n        </button> */}\r\n        <h1>{`Hii ${user} ! Analyze your text here`}</h1>\r\n      </div>\r\n      <div\r\n        className=\"container my-2\"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}\r\n      >\r\n        <label for=\"mybox2\" className=\"form-label\">\r\n          {\" \"}\r\n        </label>\r\n        <textarea\r\n          className=\"form-control\"\r\n          id=\"mybox\"\r\n          value={text}\r\n          onChange={handleONChange}\r\n          rows=\"8\"\r\n          style={{\r\n            backgroundColor: props.mode === \"dark\" ? \"#495057\" : \"white\",\r\n            color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n          }}\r\n        ></textarea>\r\n      </div>{\" \"}\r\n      <button className=\"btn btn-primary mx-2 my-2\" onClick={handleUpClick}>\r\n        Convert to Uppercase\r\n      </button>\r\n      <button className=\"btn btn-primary mx-2\" onClick={handleLowClick}>\r\n        Convert to Lowecase\r\n      </button>\r\n      <button className=\"btn btn-danger mx-2\" onClick={handleClearClick}>\r\n        Clear Text\r\n      </button>\r\n      <div\r\n        className=\"container\"\r\n        my-3\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}\r\n      >\r\n        <h2>Your Text summary here</h2>\r\n        <p>\r\n          {text.split(\" \").length - 1} words and {text.length} Characters{\" \"}\r\n        </p>\r\n        <p>{0.008 * text.split(\" \").length} Minutes Read </p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length > 0 ? text : \"Enter something here \"}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    return (\r\n       props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show role=\"alert\"`}>\r\n  <strong>{props.alert.type}</strong> : {props.alert.msg}\r\n  <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n</div>\r\n    )\r\n}\r\n","import { useState } from \"react\";\nimport About from \"./componets/About\";\nimport Navbar from \"./componets/Navbar\";\nimport TextForm from \"./componets/TextForm\";\nimport Alert from \"./componets/Alert\";\n\n// import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#495057\";\n      showAlert(\"Dark mode has been enabled !\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode has been enabled !\", \"success\");\n    }\n  };\n\n  return (\n    <>   \n    {/* <Router> */}\n      <Navbar title=\"TextUtils\" About={About} mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n   \n        <div className=\"container\">\n          {/* <Switch> */}\n            \n            {/* <Route exact path=\"/\"> */}\n              <TextForm my-3 mode={mode} showAlert={showAlert} />\n            {/* </Route> */}\n          {/* </Switch> */}\n        </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}